/**********************************************************************************
 *    Program ID   : jquery.util.js
 *    Description  : Utility Method정의
 *    lib : jquery-1.9.2.min.js
 **********************************************************************************
 * @작성일 : 2016/02/01		@작성자 : IBANK
 * @작업내역 : 초기작성
 **********************************************************************************/

(function($) {

$.extend({

	jutil : {
		isMobile : function() {
			var filter = "win16|win32|win64|mac|macintel|linux i686";
			if( navigator.platform ){
				if( filter.indexOf(navigator.platform.toLowerCase())<0 ){
					return true;
				}else{
					return false;
				}
			}
			return false;
		},
		isEmpty : function(input) {
		    if ($(input).val() == null || $(input).val().replace(/ /gi,"") == "") {
		        return true;
		    }
		    return false;
		},
		trim : function(value) {
			return value.replace(/^\s+|\s+$/gm,'');
		},
		//체크박스나 라디오버튼의 체크 여부 확인
		isChecked : function(input) {
			return ($(input).is(":checked"));
		},
		isSelected : function(input) {
			return ($(input).is(":selected"));
		},
		//체크 박스 전체 선택 및 해제
		checkAll : function(src, targetId) {
			var checked = ($(src).is(":checked")) ? true : false;
			$("input[id='"+targetId+"']").each(function() {
				$(this).attr("checked", checked);
			});
		},
		isValidEmail : function(value) {
		    var regex=/^((\w|[\-\.])+)@((\w|[\-\.])+)\.([A-Za-z]+)$/;
			return regex.test(value);
		},
		isNum : function(input) {
			return (trim(this).match(/^[0-9]+$/)) ? true : false;
		},
		/* 한글/영문/띄어쓰기만 가능 */
		isKorEng : function(input) {
			console.log("isKorEng : " + input.value);
			return /^[가-힣\sa-zA-Z\s]+$/.test($(input).val());
		},
		isMinLength : function(input, min) {
			return ( $(input).val().length >= min ) ? true : false;
		},
		isRangeLength : function(input, min, max) {
			var len = $(input).val().length;
			return ( len >= min && len <= max ) ? true : false;
		},
		isDigit : function(input) {
			return /^\d+$/.test( $(input).val() );
		},
		nextFocus : function(input, nextElementId){
			if( !(window.event.keyCode > 36 && window.event.keyCode < 41) ) {
				if ( $(input).attr("maxlength") == $(input).val().length ) {
					$("#"+nextElementId).focus();
				}
			}
		},
		eventDigit : function(e) {

			/*
			 * keydown이벤트 사용
			 * keypress이벤트의 경우 ie와 그외 브라우저에 따라 keycode값이 틀림
			 */
			//ff의 경우 keycode값이 다르므로 which로 확인
			var keyCode = ('which' in e) ? e.which : e.keyCode;
			/*
			 * 허용 keycode값인 경우 이벤트 핸들러 동작 중단
			 * 0 :
			 * 8 : backspace
			 * 9 : tab
			 * 46 : delete
			 */
			if (keyCode == 0 || keyCode == 8 || keyCode == 46 || keyCode == 9) {
				 event = e || window.event;
				 if (typeof event.stopPropagation != "undefined") {
					 event.stopPropagation();
				 } else {
					 event.cancelBubble = true;
				 }
				 return ;
			}
			if (keyCode < 48 || (keyCode > 57 && keyCode < 96) || keyCode > 105 || e.shiftKey) {
		        e.preventDefault ? e.preventDefault() : e.returnValue = false;
		    }
		},
		setComma : function(str) {
			 str = str.toString();
			 var result = "";
			 var tail = "";
			 var sign = "";
			 var flag = false;

			 if(str == "") return result;

			 // 0이하 '-'정수인 경우를 위해.
			 if (str.substring(0,1)=='-') {
				 sign = str.substring(0,1);
				 str = str.substring(1);
			 }

			 var pts = str.lastIndexOf(".");

			 if(pts > 0) { // 부동소수점인 경우
				 tail = str.substring(pts);
				 str = str.substring(0, pts);
			 }

			 var len = str.length;
			 var quota = parseInt(len / 3); // 몫
			 var remainder = len % 3; // 나머지

			 var buffer = str.substr(0, remainder); // 첫번째 값

			 for(var i = 0; i < quota; i++) {
				 if(buffer != "")
					 buffer = buffer + ',';

				 buffer = buffer + str.substr(remainder + i * 3, 3);
			 }

			 if(pts > 0)
				 result = sign + buffer + tail; // 소수점이 있으면
			 else
				 result = sign + buffer;

			 return result;
		},
		getCookie : function(name) {
			var arg = name + "=";
			var alen = arg.length;
			var clen = document.cookie.length;
			var i = 0;
			while (i < clen) {
				var j = i + alen;
				if (document.cookie.substring(i, j) == arg) return $.jutil.getCookieVal(j);
				i = document.cookie.indexOf(" ", i) + 1;
				if (i == 0) break;
			}
			return null;
		},
		getCookieVal : function(offset) {
			var endstr = document.cookie.indexOf (";", offset);
			if (endstr == -1) endstr = document.cookie.length;
			return unescape(document.cookie.substring(offset, endstr));
		},
		setCookie : function(name, value, expires) {
			var argv = $.jutil.setCookie.arguments;
			var argc = $.jutil.setCookie.arguments.length;

			var expires = (2 < argc) ? argv[2] : null;
			var path = (3 < argc) ? argv[3] : null;
			var domain = (4 < argc) ? argv[4] : null;
			var secure = (5 < argc) ? argv[5] : false;

			var today = new Date();
			if(expires != null) {
				//cookie 날짜 계산 수정
				today.setTime(today.getTime()+(expires*24*60*60*1000));
			}
			document.cookie = name + "=" + escape (value) + ((expires == null) ? "" : ("; expires=" + today.toGMTString())) + ((path == null) ? "" : ("; path=" + path)) + ((domain == null) ? "" : ("; domain=" + domain)) + ((secure == true) ? "; secure" : "");
		},
		clearCookie : function(name) {
			var expire_date = new Date();
			//어제 날짜를 쿠키 소멸 날짜로 설정한다.
			expire_date.setDate(expire_date.getDate() - 1)
			document.cookie = name + "= " + "; expires=" + expire_date.toGMTString() + "; path=/";
		},
		getByteLength : function(input, obj_id, maxlength) {	//	DOM
		    var byteLength = 0; var tmp = '';
		    for (var inx = 0; inx < input.value.length; inx++) {
		        var oneChar = escape(input.value.charAt(inx));
		        if ( oneChar.length == 1 ) {
		            byteLength ++;
		        } else if (oneChar.indexOf("%u") != -1) {
		            byteLength += 3;
		        } else if (oneChar.indexOf("%") != -1) {
		            byteLength += oneChar.length/3;
		        }
		        if (byteLength < maxlength) {
			    	tmp += oneChar;
				} else {
					input.value = unescape(tmp);
					input.focus();
				}
		    }

		    document.getElementById(obj_id).innerText = byteLength;
		},
		getCharLength : function(input, obj_id, maxlength) {	//	DOM

		    var value = input.value;
		    var charLength = input.value.length;
		    console.log(charLength + " / " + maxlength);
		    if (charLength > maxlength) {
		    	console.log("222 : " + charLength + " / " + maxlength);
		    	input.value = input.value.substr(0, maxlength);
		    	charLength = input.value.length;
		    }

		    //등록 된 글자수 표시
		    document.getElementById(obj_id).innerText = input.value.length;
		},
		checklen : function(fform, maxlength) {
			var msgtext = fform.value;
			var i=0;
			var l=0;
			var temp = "", espTemp = "";
			var s = "";

			while(i < msgtext.length) {
				temp = msgtext.charAt(i);
				espTemp = encodeURI(temp);

				if(espTemp.length > 6) {	//한글
					l += 3;
				} else if(espTemp == "%0A") {	//엔터키
					l += 3;
				} else if(espTemp.length >= 4 && espTemp.length <= 6) {//(·)등과 같은 문자
					l += 3;
				} else {
			        l++;
			    }

				if (l < maxlength) {
					s += temp;
				} else {
					fform.value = s;
					fform.focus();
					return false;
				}
				i++;
			}
			return true;
		},
		/*=======================
		 * 회원 관련 유틸
		 */
		//비밀번호는 숫자와 영문자 조합으로 8~32자리  사용
		passwdRule_1 : function(input) {
			if(!/^[a-zA-Z0-9]{8,32}$/.test(input.value)) {
		 		return false;
			}
			return true;
		},
		passwdRule_2 : function(input) {
			var chk_num = input.value.search(/[0-9]/g);
			var chk_eng = input.value.search(/[a-z]/ig);
			if(chk_num < 0 || chk_eng < 0) {
				return false;
			}
			return true;
		},
		passwdRule_3 : function(input) {
			if(/(\w)\1\1\1/.test(input.value)) {
				return false;
			}
			return true;
		},
		preventBackspace : function(vo) {
			$(document).keydown(function(e){
				//input 및 textarea만 백스페이스 허용
				if(e.target.nodeName != "INPUT" && e.target.nodeName != "TEXTAREA"){
					if(e.keyCode == 8){
						return false;
					}
				}
			});
		},
		//14세 이상 체크
		isOver14 : function(yyyymmdd) {
			var today = new Date();
			var toyear = today.getFullYear();
			var tomonth = parseInt(today.getMonth()) + 1;
			var todate = parseInt(today.getDate());
			var toMMDD = (tomonth<10? "0"+tomonth : ""+tomonth) + (todate<10? "0"+todate : ""+todate);
			console.log("yyyymmdd : " + yyyymmdd)
			var bhyear = yyyymmdd.substring(0, 4);
			var bhmonth = yyyymmdd.substring(4, 6);
			var bhdate = yyyymmdd.substring(6, 8);

//			console.log("생년월일 : " + bhyear + " / " + bhmonth + " / " + bhdate);

			var bhMMDD = bhmonth + bhdate;
			var birthyear = parseInt(toyear,10) - parseInt(bhyear,10);
			if (birthyear < 14 || (birthyear == 14 && parseInt(toMMDD,10) < parseInt(bhMMDD,10))) {
				return false;
			}
			return true;
		}
	},
	//Date Util
	jdate : {
		dateGtAfter : function(sDate, eDate) {
			if(sDate > eDate){
				alert('시작일이 종료일자 보다 클 수 없습니다.');
				return true;
			}
			return false;
		},
		dateDiff : function(sDate, eDate, format) {

			if (!sDate || sDate.length != 8) {
				return;
			}
			if (!eDate || eDate.length != 8) {
				return;
			}

			var sYear = sDate.substring(0, 4);
			var sMon = sDate.substring(4, 6);
			var sDay = sDate.substring(6, 8);

			var eYear = eDate.substring(0, 4);
			var eMon = eDate.substring(4, 6);
			var eDay = eDate.substring(6, 8);

			var start = new Date(sYear, sMon, sDay);
			var end = new Date(eYear, eMon, eDay);

			console.log(sYear + " / " + sMon + " / " + sDay);

			var diff = end - start;
			var curDay = 24 * 60 * 60 * 1000;	//시 * 분 * 초 * 밀리세컨드
			var value = 0;

			if (format == "d") {
				value = parseInt(diff / curDay);
			}
			console.log("datediff.value : " + value);
//			var seleDate=parseInt(DisChrgSchYear- JoinSchYear)*365 + parseInt(DisChrgSchMon- JoinSchMon)*30+parseInt(DisChrgSchDt- JoinSchDt);
			return value;
		},
		//날짜 더하기 함수
		addDays : function(src, targ1, targ2) {
			var today = new Date();
			cur_month = today.getMonth()+1;
			cur_year = today.getFullYear();
			cur_day = today.getDate();
			var newday = new Date();
			var new_year, new_month, new_day;

			switch(src) {
				case 'R1':
					today.setDate(cur_day*1-1);
					cur_day = today.getDate();
					cur_month = today.getMonth() + 1;
					cur_year = today.getFullYear();

					newday.setDate(newday.getDate()*1-1);
					new_day = today.getDate();
					new_year = today.getFullYear();
				break;
				case 'D0':
					new_month = newday.getMonth() + 1;
				break;
				case 'D3':
					today.setDate(cur_day*1-3);
					cur_day = today.getDate();
					cur_month = today.getMonth() + 1;
					cur_year = today.getFullYear();
				break;
				case 'D7':
					today.setDate(cur_day*1-7);
					cur_day = today.getDate();
					cur_month = today.getMonth() + 1;
					cur_year = today.getFullYear();
				break;
				case 'D15':
					today.setDate(cur_day*1-15);
					cur_day = today.getDate();
					cur_month = today.getMonth() + 1;
					cur_year = today.getFullYear();
				break;
				case 'M1':
					today.setMonth(cur_month*1 - 1);
					cur_month = today.getMonth();
					cur_year = today.getFullYear();
				break;
				case 'M2':
					today.setMonth(cur_month*1 - 2);
					cur_month = today.getMonth();
					cur_year = today.getFullYear();
				break;
				case 'M3':
					today.setMonth(cur_month*1 - 3);
					cur_month = today.getMonth();
					cur_year = today.getFullYear();
				break;
				case 'M6':
					today.setMonth(cur_month*1 - 6);
					cur_month = today.getMonth();
					cur_year = today.getFullYear();
				break;
				case 'MD': //멤버십 기간
					today.setMonth(cur_month*1 - 5);
					cur_day = "1";
					cur_month = today.getMonth();
					cur_year = today.getFullYear();
				break;


				case 'Y1':
					today.setFullYear(cur_year*1 - 1);
					cur_month = today.getMonth() + 1;
					cur_year = today.getFullYear();

				break;

			}
			/*
			if(src == 0) {
				newday.setDate(cur_day*1+15);
				new_month = newday.getMonth() + 1;
			} else {

			}
			*/
			//if(src == 'Y1'){new_	year = newday.getFullYear()*1 + 1;}
			new_year = newday.getFullYear();
			new_month = newday.getMonth() + 1;
			new_day = newday.getDate();

			cur_month = "" + cur_month;cur_day = "" + cur_day;
			new_month = "" + new_month;new_day = "" + new_day;
			if (cur_month.length == 1) cur_month = "0" + cur_month;
			if (cur_day.length == 1) cur_day = "0" + cur_day;

			if (cur_month == "00") {
				cur_year = cur_year - 1;
				cur_month = "12";
			}

			cur_day = this.isValidDay(cur_year, cur_month, cur_day);
			var now = cur_year + "-" + cur_month + "-" + cur_day;
			if (new_month.length == 1) new_month = "0" + new_month;
			if (new_day.length == 1) new_day = "0" + new_day;


			var newd = new_year + "-" + new_month + "-" + new_day;

			targ1.value = now;
			targ2.value = newd;

		},
		isValidDay : function(yyyy, mm, dd) {
		    var m = parseInt(mm,10)-parseInt(1);
		    var d = parseInt(dd,10);

		   var end = new Array(31,28,31,30,31,30,31,31,30,31,30,31);
		    if ((yyyy % 4 == 0 && yyyy % 100 != 0) || yyyy % 400 == 0) {
		        end[1] = 29;
		    }

		 	if(d >= 1 && d <= end[m]){
		 		return dd;
		 	}else{
		 		return end[m];
		 	}

		 	return true;
		 }
	},
	jmessage : {
		messages : {
			isKorEng : "이름은 한글 영문만 가능합니다.",
			nameRule_1 : "이름은 한글 영문만 가능합니다.",
			isRangeLength : "2~50자 이내만 가능합니다.",
			isMinLength : "{0} {1} 이상 입력만 가능합니다.",
			//isValidEmail : "올바른 이메일 주소를 입력해 주세요.",
			isValidEmail : "이메일을 올바르게 입력해 주세요.",
			passwdRule_1 : "비밀번호는 숫자와 영문자 조합으로 8~32자리를 사용해야 합니다.",
			//passwdRule_1 : "비밀번호는 숫자와 영문자 조합으로 8~12자리를 사용해야 합니다.",
			passwdRule_2 : "비밀번호는 숫자와 영문자를 혼용하여야 합니다.",
			passwdRule_3 : "비밀번호에 같은 문자를 4번 이상 사용하실 수 없습니다.",
			inputRequired : "{0} 입력해 주세요.",
			selectRequired : "{0} 선택해 주세요.",
			confirmRequired : "{0} 확인해 주세요.",
			equalTo : "{0} 일치하지 않습니다.",
			notSameTo : "{0} {1} 같을 수 없습니다.",
			digits : "숫자만 입력 가능합니다.",
			secretWord : "이미지에 보이는 숫자 또는 스피커를 통해 들리는 숫자를 입력해 주세요.",
			mSecretWord : "이미지에 보이는 숫자를 입력해 주세요.",
			selfAuth : "주문자 성명을 입력해 주세요."
		},
		getMessage : function(code, args) {
			var msg = this.messages[code];
			if (msg && args) {
				var values = args.split(",");
				for (var i = 0; i < values.length; i++) {
					msg = msg.replace("{"+i+"}", values[i]);
				}
			}
			return msg;
		}
	},
	/*
	 * 폼 밸리데이션 라이브러리 지원 함수
	 */
	jvalid : {
//		addRules : function(rules) {
//			for(var rule in rules) {
//				console.log("rule : " + rule);
//			}
//		},
		addMethod : function() {

			//이름 - 한글/영문만 입력
			$.validator.addMethod("nameRule_1", function(value, element, params) {
				if ( !$.jutil.isKorEng(element) ) {
			    	return false;
				}
				return true;
			}, $.jmessage.getMessage("isKorEng", "이름은"));

			//이름 - 2 ~ 50자 내 입력
			$.validator.addMethod("nameRule_2", function(value, element, params) {
				if ( !$.jutil.isRangeLength(element, 2, 50)) {
			        return false;
				}
				return true;
			}, $.jmessage.getMessage("isRangeLength", "이름은,2,50자"));

			//핸드폰 번호(중간) - 3자 이상 입력
			$.validator.addMethod("mobileRule_1", function(value, element, params) {
				if( !$.jutil.isMinLength(element, 3) ) {
			        return false;
			    }
				return true;
			}, $.jmessage.getMessage("isMinLength", "휴대폰 번호는,3자리"));

			//핸드폰 번호(마지막) - 4자 이상 입력
			$.validator.addMethod("mobileRule_2", function(value, element, params) {
				if( !$.jutil.isMinLength(element, 4) ) {
			        return false;
			    }
				return true;
			}, $.jmessage.getMessage("isMinLength", "휴대폰 번호는,4자리"));

			//외국인 인증 규칙
			$.validator.addMethod("foreignRule_1", function(value, element, params) {
				var nationFirstNum = value.substring(0,1);
				console.log("nationFirstNum : " + nationFirstNum);
				if(!(nationFirstNum == "5" ||nationFirstNum == "6" || nationFirstNum == "7" || nationFirstNum == "8")){
					return false;
				}
				return true;
			}, "내국인은 외국인 실명인증을 이용하실 수 없습니다.");
			//이메일 형식
			$.validator.addMethod("validEmailFormat", function(value, element, params) {
				return $.jutil.isValidEmail($('#email1').val() + '@' + $('#email2').val());
			}, "유효한 이메일 주소를 입력해주세요..");
			//이메일 형식 - 텍스트
			$.validator.addMethod("validEmailFormatInputText", function(value, element, params) {
				return $.jutil.isValidEmail($('#emailTxt').val());
			}, "유효한 이메일 주소를 입력해주세요..");
			//이메일 형식 - 셀렉트바그
			$.validator.addMethod("validEmailFormatSelectBox", function(value, element, params) {
				var domain = $('select[name=email2] option:selected').val();
				if(domain) {
					return $.jutil.isValidEmail(value + '@' + domain);
				} else {
					return $.jutil.isValidEmail(value + '@' + $('#directEmailDomnain').val());
				}
			}, "유효한 이메일 주소를 입력해주세요..");
		},
		addMethodMember : function() {

			//회원 아이디 규칙
			$.validator.addMethod('idRule_1', function(value, element, params) {
				// 아이디 첫글자 소문자 확인
				if( !(97 <= element.value.charCodeAt(0) && 122 >= element.value.charCodeAt(0)))
				{
					return false;
				}
				return true;
			}, "아이디는 영문 소문자로 시작되어야 합니다.");

			$.validator.addMethod('idRule_2', function(value, element, params) {

				if( !(element.value.length > 3 && element.value.length < 14) ) {
					return false;
				}
				return true;
			}, "아이디는 4~13자 사이로 입력해주세요.");

			$.validator.addMethod('idRule_3', function(value, element, params) {

				if(!/^[a-zA-Z0-9]{4,14}$/.test(element.value)){
					return false;
				}
				return true;
			}, "아이디는 영문문자와 숫자로 입력해주세요.");



			//아이디 중복 확인 수행 확인
    		$.validator.addMethod('idDupRule_1', function(value, element, param) {
     				console.log("id rule 1 : " + $(element.form.idChk).val());
    				if( $(element.form.idChk).val() != "Y" ) { return false; }
    				return true;
    			}, "아이디 중복확인을 해주세요."
    		);

    		//중복된  아이디
    		$.validator.addMethod('idDupRule_2', function(value, element, param) {

    				if( $(element.form.idChk).val() == "N" ) { return false; }
    				return true;
    			}, "사용중인 아이디입니다. 다시 입력하세요."
    		);

    		//아이디 사용 가능
    		$.validator.addMethod('idDupRule_3', function(value, element, param) {

    				if( $(element.form.idChk).val() == "Y" ) {
    					return true;
    				}
    				return false;
    			}, "사용중인 아이디입니다. 다시 입력하세요."
    		);

//    		$.validator.addMethod("idDupCheck", function(value, element, param) {
//    			var result = false;
//    			var url = "/kr/ko/MemberDupIdChk.do";
//
//    			$.ajax({
//    				cache : false,
//    				async : false,
//    				type : "post",
//    				data : { cstmId : $("#cstmId").val() },
//    				url : url,
//    				success : function(data) {
//    					if(jQuery.trim(data) == "Y"){
//    						$("input[name=idChk]").val("Y");
//    						result = true;
//    					}
//    					else {
//    						$("input[name=idChk]").val("N");
//    						result = false;
//    					}
//    				}
//    			});
//    			console.log("result : " + result);
//    			return result;
//    		}, "사용중인 아이디입니다. 다시 입력하세요.");

    		//비밀번호 규칙 1 - 8~32자
    		$.validator.addMethod('pwRule_1', function(value, element, params) {

    				if(!/^[a-zA-Z0-9]{8,32}$/.test(element.value))
    			    {
						return false;
					}
					return true;
    			}, "비밀번호는 숫자와 영문자 조합으로 8~32자리를 사용해야 합니다."
    			//}, "비밀번호는 숫자와 영문자 조합으로 8~12자리를 사용해야 합니다."
			);

    		//비밀번호 규칙 2 - 숫자/문자 혼용 필수
    		$.validator.addMethod('pwRule_2', function(value, element, params) {

    				var chk_num = element.value.search(/[0-9]/g);
    			    var chk_eng = element.value.search(/[a-z]/ig);
    			    if(chk_num < 0 || chk_eng < 0)
				    {
						return false;
				    }
					return true;
    			}, "비밀번호는 숫자와 영문자를 혼용하여야 합니다."
			);

    		//비밀번호 규칙 3 - 같은 문자 4번 이상 사용 불가
    		$.validator.addMethod('pwRule_3', function(value, element, params) {

    			    if(/(\w)\1\1\1/.test(element.value))
    			    {
    			        return false;
    			    }
    			    return true;
    			}, "비밀번호에 같은 문자를 4번 이상 사용하실 수 없습니다."
    		);

    		//이메일 규칙 1 - 계정 or 도메인 중 입력이 된 경우 중복확인 여부 체크
    		$.validator.addMethod('emailRule_1', function(value, element, param) {

    			if (( $(element.form.email1).val() != '' || $(element.form.email2).val() != '') &&  $(element.form.emailCheckFl).val() != "Y") {
    				return false;
    			}
    			return true;
    		}, "고객님이 기입하신 이메일이 사용 가능한지 확인이 필요합니다.\'메일확인\' 버튼을 클릭해주세요.");

    		//이메일 규칙 3 - 이메일 형식 체크
    		$.validator.addMethod('emailRule_2', function(value, element, param) {

    			if ( !$.jutil.isValidEmail(value)) {
    				return false;
    			}
    			return true;
    		}, $.jmessage.getMessage("isValidEmail"));

    		//이메일 규칙 3 - 이메일 형식 체크
    		$.validator.addMethod('emailRule_3', function(value, element, param) {

    			if (( $(element.form.email1).val() != '' || $(element.form.email2).val() != '') && $(element.form.emailCheckFl).val() == 'E' ) {
    				return false;
    			}
    			return true;
    		}, "형식에 맞지 않습니다. 도메인명은 6자리 이상 작성해 주세요.");

    		$.validator.addMethod('tm_inniRule_1', function(value, element, param) {

    			if ($(element.form.homePhoneNo2).val() != "" && $(element.form.homePhoneNo3).val() != "" ) {

    				if (!$(element.form).find(":radio[name='tm_inni']:checked").val()) {
    					return false;
    				}

//    				if(!$(':radio[name="tm_inni"]:checked').val()){
//    					return false;
//    				}
    			}
    			return true;
    		}, "전화 수신여부를 선택해 주세요.");

    		$.validator.addMethod('tm_inniRule_2', function(value, element, param) {

    			if( $(element.form.homePhoneNo2).val() =='' || $(element.form.homePhoneNo3).val() ==''){

    				if ($(element.form).find(":radio[name='tm_inni']:checked").val() == "Y") {
    					return false;
    				}

//    				if($(':radio[name="tm_inni"]:checked').val() == "Y"){
//    					return false;
//    				}
    			}
    			return true;
    		}, "TM을 받으시려면 하단 추가정보의 집전화를 입력해 주세요.");

    		//이메일이 등록 된 경우 이메일 수신여부 체크하도록 함.
    		$.validator.addMethod('email_inniRule_1', function(value, element, param) {

    			if ($(element.form.email1).val() != "" && $(element.form.email2).val() != "" ) {
    				if (!$(element.form).find(":radio[name='email_inni']:checked").val()) {
    					return false;
    				}
    			}
    			return true;
    		}, "이메일 수신여부를 선택해 주세요.");

    		//이메일이 비어있는 상태에서 수신여부가 Y인 경우 체크
    		$.validator.addMethod('email_inniRule_2', function(value, element, param) {

    			if ($(element.form.email1).val() == "" || $(element.form.email2).val() == "" ) {
    				if ($(element.form).find(":radio[name='email_inni']:checked").val() == "Y") {
    					return false;
    				}
    			}
    			return true;
    		}, "이메일 수신여부를 미수신으로 선택해 주세요.");

    		//주소가 등록 된 경우 우편물 수신여부를 선택하도록 함.
    		$.validator.addMethod('postal_inniRule_1', function(value, element, param) {

    			if ( $(element.form.homeZip1).val() != "" && $(element.form.homeZip2).val() != "" && $(element.form.homeAddr1).val() != "" ) {

    				if (!$(element.form).find(":radio[name='postal_inni']:checked").val()) {
    					return false;
    				}

//    				if(!$(':radio[name="postal_inni"]:checked').val()){
//    					return false;
//    				}
    			}
    			return true;
    		}, "우편물 수신여부를 선택해 주세요.");

    		//주소가 등록 안 된 경우 우편물 수신여부가 Y로 체크되어 있으면 미수신 선택하도록 함.
    		$.validator.addMethod('postal_inniRule_2', function(value, element, param) {

    			if ( $(element.form.homeZip1).val() == "" || $(element.form.homeZip2).val() == "" || $(element.form.homeAddr1).val() == "" ) {

    				if ($(element.form).find(":radio[name='postal_inni']:checked").val() == "Y") {
    					return false;
    				}
//
//    				if($(':radio[name="postal_inni"]:checked').val() == 'Y'){
//    					return false;
//    				}
    			}
    			return true;
    		}, "우편물 수신여부를 미수신으로 선택해 주세요.");

    		/*뷰티포인트 수신동의 validation */
    		$.validator.addMethod('bp_email_inniRule_1', function(value, element, param) {

    			if ($(element.form.email1).val() != "" && $(element.form.email2).val() != "" ) {
    				if (!$(element.form).find(":radio[name='bp_email_inni']:checked").val()) {
    					return false;
    				}
    			}
    			return true;
    		}, "이메일 수신여부를 선택해 주세요.");

    		$.validator.addMethod('bp_email_inniRule_2', function(value, element, param) {

    			if ($(element.form.email1).val() == "" || $(element.form.email2).val() == "" ) {
    				if ($(element.form).find(":radio[name='bp_email_inni']:checked").val() == "Y") {
    					return false;
    				}
    			}
    			return true;
    		}, "이메일 수신여부를 미수신으로 선택해 주세요.");

    		$.validator.addMethod('bp_postal_inniRule_1', function(value, element, param) {
				if ( $(element.form.homeZip1).val() != "" && $(element.form.homeZip2).val() != "" && $(element.form.homeAddr1).val() != "" ) {

					if (!$(element.form).find(":radio[name='bp_postal_inni']:checked").val()) {
						return false;
					}

				}
				return true;
			}, "우편물 수신여부를 선택해 주세요.");

			$.validator.addMethod('bp_postal_inniRule_2', function(value, element, param) {

				if ( $(element.form.homeZip1).val() == "" || $(element.form.homeZip2).val() == "" || $(element.form.homeAddr1).val() == "" ) {

					if ($(element.form).find(":radio[name='bp_postal_inni']:checked").val() == "Y") {
						return false;
					}
				}
				return true;
			}, "우편물 수신여부를 미수신으로 선택해 주세요.");

			$.validator.addMethod('bp_tm_inniRule_1', function(value, element, param) {

    			if ($(element.form.homePhoneNo2).val() != "" && $(element.form.homePhoneNo3).val() != "" ) {

    				if (!$(element.form).find(":radio[name='bp_tm_inni']:checked").val()) {
    					return false;
    				}

    			}
    			return true;
    		}, "전화 수신여부를 선택해 주세요.");

    		$.validator.addMethod('bp_tm_inniRule_2', function(value, element, param) {

    			if( $(element.form.homePhoneNo2).val() =='' || $(element.form.homePhoneNo3).val() ==''){

    				if ($(element.form).find(":radio[name='bp_tm_inni']:checked").val() == "Y") {
    					return false;
    				}

    			}
    			return true;
    		}, "TM을 받으시려면 하단 추가정보의 집전화를 입력해 주세요.");

    		//밀리터리 회원 등록
    		$.validator.addMethod("dateVali", function(value, element, param) {

    			var dateCur = 365*3;
    			var DisChrgSchYear="";
    			var JoinSchYear="";
    			var DisChrgSchMon="";
    			var JoinSchMon="";
    			var JoinSchDt="";
    			var DisChrgSchDt="";

    			$("#mtDateValiYn").val('');

    			/*
    			if($("select[name=mtJoinSchYear]").val() != "" && $("select[name=mtJoinSchMon]").val() != ""
    				  && $("select[name=mtJoinSchDt]").val() != "" && $("select[name=mtDisChrgSchYear]").val() != ""
    				  && $("select[name=mtDisChrgSchMon]").val() != "" && $("select[name=mtDisChrgSchDt]").val() != ""){

    				console.log("sk");

    				JoinSchYear = $("select[name=mtJoinSchYear]").val();
    				JoinSchMon  = $("select[name=mtJoinSchMon]").val();
    				JoinSchDt   = $("select[name=mtJoinSchDt]").val();

    				DisChrgSchYear= $("select[name=mtDisChrgSchYear]").val();
    				DisChrgSchMon = $("select[name=mtDisChrgSchMon]").val();
    				DisChrgSchDt  = $("select[name=mtDisChrgSchDt]").val();

    				if (JoinSchMon.length == 1) JoinSchMon = "0" + JoinSchMon;
    				if (JoinSchDt.length == 1) JoinSchDt = "0" + JoinSchDt;
    				if (DisChrgSchMon.length == 1) DisChrgSchMon = "0" + DisChrgSchMon;
    				if (DisChrgSchDt.length == 1) DisChrgSchDt = "0" + DisChrgSchDt;

    				var start = JoinSchYear + JoinSchMon + JoinSchDt;
    				var end = DisChrgSchYear + DisChrgSchMon + DisChrgSchDt;

    				console.log("start : " + start + " / " + end);

    				var seleDate = $.jdate.dateDiff(start, end, "d");

//     				var seleDate=parseInt(DisChrgSchYear- JoinSchYear)*365 + parseInt(DisChrgSchMon- JoinSchMon)*30+parseInt(DisChrgSchDt- JoinSchDt);
    				console.log(seleDate + " / " + dateCur);
    				if(seleDate > dateCur ) {
//     				    alert("3년 이내의 기간으로 입력해주세요.");
    					return false;
    				}
    				$("#mtDateValiYn").val('Y');
    				return true;
    			}
    			*/
    			if($("input[name=mtJoinSchDay]").val() != ""  && $("input[name=mtDisChrgSchDay]").val() != ""){

	  				console.log("sk");
	
	  				var start = $("input[name=mtJoinSchDay]").val();
	  				var end = $("input[name=mtDisChrgSchDay]").val();
	  				
	  				/*if(!/^[0-9]{8,8}$/.test(start)){
	  					//console.log('입대 예정일 에러확인');
	  					return false;
	  				} 
	  				if(!/^[0-9]{8,8}$/.test(end)){
	  					//console.log('전역 예정일 에러확인');
	  					return false;
	  				} */
	  				
	  				if(!/^(19|20)\d{2}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[0-1])$/.test(start)){
	  					//console.log('입대 예정일 에러확인');
	  					return false;
	  				}
	  				if(!/^(19|20)\d{2}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[0-1])$/.test(end)){
	  					//console.log('전역 예정일 에러확인');
	  					return false;
	  				}
	
	  				console.log("start : " + start + " / " + end);
	
	  				var seleDate = $.jdate.dateDiff(start, end, "d");
	
	//   				var seleDate=parseInt(DisChrgSchYear- JoinSchYear)*365 + parseInt(DisChrgSchMon- JoinSchMon)*30+parseInt(DisChrgSchDt- JoinSchDt)
	  				console.log(seleDate + " / " + dateCur);
	  				
	  				// 음수확인
	  				if(seleDate < 0){
	  					//console.log('음수에러');
	  					return false;
	  				}
	  				
	  				if(seleDate > dateCur ) {
	//   				    alert("3년 이내의 기간으로 입력해주세요.");
	  					//console.log('에러확인');
	  					return false;
	  				}
	  				$("#mtDateValiYn").val('Y');
	  				return true;
	  			}
    			return true;
    		}, "3년 이내의 기간으로 입력해주세요.");

    		$.validator.addMethod("dateValiCheckbox", function(value, element, param) {

    			var dateCur = 365*3;
    			var DisChrgSchYear="";
    			var JoinSchYear="";
    			var DisChrgSchMon="";
    			var JoinSchMon="";
    			var JoinSchDt="";
    			var DisChrgSchDt="";

    			$("#mtDateValiYn").val('');

    			if($("input:radio[name=mtJoinSchYear]").is(":checked") &&
    					$("input:radio[name=mtJoinSchMon]").is(":checked") &&
    					$("input:radio[name=mtJoinSchDt]").is(":checked") &&
    					$("input:radio[name=mtDisChrgSchYear]").is(":checked") &&
    					$("input:radio[name=mtDisChrgSchMon]").is(":checked") &&
    					$("input:radio[name=mtDisChrgSchDt]").is(":checked")) {

    				console.log("sk");

    				JoinSchYear = $("input:radio[name=mtJoinSchYear]:checked").val();
    				JoinSchMon  = $("input:radio[name=mtJoinSchMon]:checked").val();
    				JoinSchDt   = $("input:radio[name=mtJoinSchDt]:checked").val();

    				DisChrgSchYear= $("input:radio[name=mtDisChrgSchYear]:checked").val();
    				DisChrgSchMon = $("input:radio[name=mtDisChrgSchMon]:checked").val();
    				DisChrgSchDt  = $("input:radio[name=mtDisChrgSchDt]:checked").val();

    				if (JoinSchMon.length == 1) JoinSchMon = "0" + JoinSchMon;
    				if (JoinSchDt.length == 1) JoinSchDt = "0" + JoinSchDt;
    				if (DisChrgSchMon.length == 1) DisChrgSchMon = "0" + DisChrgSchMon;
    				if (DisChrgSchDt.length == 1) DisChrgSchDt = "0" + DisChrgSchDt;

    				var start = JoinSchYear + JoinSchMon + JoinSchDt;
    				var end = DisChrgSchYear + DisChrgSchMon + DisChrgSchDt;

    				console.log("start : " + start + " / " + end);

    				var seleDate = $.jdate.dateDiff(start, end, "d");

//     				var seleDate=parseInt(DisChrgSchYear- JoinSchYear)*365 + parseInt(DisChrgSchMon- JoinSchMon)*30+parseInt(DisChrgSchDt- JoinSchDt);
    				console.log(seleDate + " / " + dateCur);
    				if(seleDate > dateCur ) {
//     				    alert("3년 이내의 기간으로 입력해주세요.");
    					return false;
    				}
    				$("#mtDateValiYn").val('Y');
    				return true;
    			}
    			return true;
    		}, "3년 이내의 기간으로 입력해주세요.");
		},
		keyup : function(element) {
			$(element).valid();
		}
	},
	//2017.11 비밀번호 설정규칙 변경
	//아래 조건 중2개 이상 포함 시 낮음, 1개 포함 시 적정, 0개 포함 시 높음.
	//	4자리 이상 반복/연속한 숫자/문자 포함
	//	중복 제거 문자 수3개 이하
	//	비밀번호 10자리 미만 and 문자조합(영문 대,소문자, 숫자, 특수문자) 중3개 미만 구성
	pwSafetyLv : {
		safetyMessages : function(value) {
			if(!/^[a-zA-Z0-9]{8,32}$/.test(value)){
				$("#resultSafetyLv").attr('class','inputAlt safetyNo');
				$.jcom.showFormMessage({message : '사용불가', targetId : "#resultSafetyLv"});
			} else if (/(\w)\1\1\1/.test(value)){
				$("#resultSafetyLv").attr('class','inputAlt safetyNo');
				$.jcom.showFormMessage({message : '사용불가', targetId : "#resultSafetyLv"});

			} else if (/(?=.*\d{1,32})(?=.*[a-zA-Z]{1,32}).{8,32}$/.test(value)){
				if(/(?=.*\d{4,32})(?=.*[a-zA-Z]{4,32}).{10,32}$/.test(value)){
					//안전도 적정 : 영문 숫자 각각 4글자 이상, 10글자 이상
					valResult = '안전도 높음';
					$("#resultSafetyLv").attr('class','inputAlt safetyYes');
				}else if(/(?=.*\d{4,32})(?=.*[a-zA-Z]{4,32}).{9,32}$/.test(value)){
					//안전도 적정 : 영문 숫자 각각 4글자 이상, 9글자 이상
					valResult = '안전도 적정';
					$("#resultSafetyLv").attr('class','inputAlt safetyYes');
				}else{
					//안전도 낮음 : 영문 숫자가 각각 3글자 이내, 8자
					//valResult = '안전도 낮음';
					valResult = '안전도 적정';
					$("#resultSafetyLv").attr('class','inputAlt safetyYes');
				}
				$.jcom.showFormMessage({message : valResult, targetId : "#resultSafetyLv"});
			} else {
				//사용불가 : 8자 이내, 숫자 영문 혼용이 아닐 경우
				$("#resultSafetyLv").attr('class','inputAlt safetyNo');
				$.jcom.showFormMessage({message : '사용불가', targetId : "#resultSafetyLv"});
				/*
				if(pwValCnt(value)>=2 && !/\s/.test(value)){
					var valCnt2 = 0;
					if(/(\w)\1\1\1/.test(value))
					{
						valCnt2++;
					}
					var dupCount = 0;
					var arr = value.split('');
					var rstArr = '';
					if(arr.length > 0){
						for(var i=0; i < arr.length; i++) {
							var el = arr[i];
							if('' == el){
								continue;
							}else{
								if(rstArr.indexOf(el) == -1){
									rstArr = rstArr + el;
								}else{
									dupCount =dupCount + 1;
								}
							}
						}
					}
					if(dupCount>=3){
						valCnt2++;
					}
					if(value.length<10 && pwValCnt(value)<3)
					{
						valCnt2++;
					}
					if(valCnt2 >= 2){
						valResult = '안전도 낮음';
						$("#resultSafetyLv").attr('class','inputAlt safetyNo');
					} else if (valCnt2 == 1){
						valResult = '안전도 적정';
						//$("#resultSafetyLv").attr('class','inputAlt safetyOk');
						// 안전도 적정 클래스 변경
						$("#resultSafetyLv").attr('class','inputAlt safetyYes');
					} else if (valCnt2 == 0){
						valResult = '안전도 높음';
						//$("#resultSafetyLv").attr('class','inputAlt safetyOk');
						// 안전도 높음 클래스 변경
						$("#resultSafetyLv").attr('class','inputAlt safetyYes');
					}
					$.jcom.showFormMessage({message : valResult, targetId : "#resultSafetyLv"});
				} else {
					$("#resultSafetyLv").attr('class','inputAlt safetyNo');
					$.jcom.showFormMessage({message : '사용불가', targetId : "#resultSafetyLv"});
				}
				*/
			}
		}
	},
	// 모바일 비밀번호 변경규칙
	//아래 조건 중2개 이상 포함 시 낮음, 1개 포함 시 적정, 0개 포함 시 높음.
	//	4자리 이상 반복/연속한 숫자/문자 포함
	//	중복 제거 문자 수3개 이하
	//	비밀번호 10자리 미만 and 문자조합(영문 대,소문자, 숫자, 특수문자) 중3개 미만 구성
	mPwSafetyLv : {
		safetyMessages : function(value) {
			if(!/^[a-zA-Z0-9]{8,32}$/.test(value)){
				$("#resultSafetyLv").attr('class','safe Lv1');
				$.jcom.showFormMessage({message : '사용불가', targetId : "#resultSafetyLv"});
			} else if (/(\w)\1\1\1/.test(value)){
				$("#resultSafetyLv").attr('class','safe Lv1');
				$.jcom.showFormMessage({message : '사용불가', targetId : "#resultSafetyLv"});

			} else if (/(?=.*\d{1,32})(?=.*[a-zA-Z]{1,32}).{8,32}$/.test(value)){
				if(/(?=.*\d{4,32})(?=.*[a-zA-Z]{4,32}).{9,32}$/.test(value)){
					//안전도 적정 : 영문 숫자 각각 4글자 이상, 9글자 이상
					valResult = '안전도 적정';
					$("#resultSafetyLv").attr('class','safe Lv3');
				}else{
					//안전도 낮음 : 영문 숫자가 각각 3글자 이내, 8자
					valResult = '안전도 낮음';
					$("#resultSafetyLv").attr('class','safe Lv2');
				}
				$.jcom.showFormMessage({message : valResult, targetId : "#resultSafetyLv"});
			} else {
				//사용불가 : 8자 이내, 숫자 영문 혼용이 아닐 경우
				$("#resultSafetyLv").attr('class','safe Lv1');
				$.jcom.showFormMessage({message : '사용불가', targetId : "#resultSafetyLv"});

				/*
				if(pwValCnt(value)>=2 && !/\s/.test(value)){
					var valCnt2 = 0;
					if(/(\w)\1\1\1/.test(value))
					{
						valCnt2++;
					}
					var dupCount = 0;
					var arr = value.split('');
					var rstArr = '';
					if(arr.length > 0){
						for(var i=0; i < arr.length; i++) {
							var el = arr[i];
							if('' == el){
								continue;
							}else{
								if(rstArr.indexOf(el) == -1){
									rstArr = rstArr + el;
								}else{
									dupCount =dupCount + 1;
								}
							}
						}
					}
					if(dupCount>=3){
						valCnt2++;
					}
					if(value.length<10 && pwValCnt(value)<3)
					{
						valCnt2++;
					}
					if(valCnt2 >= 2){
						valResult = '안전도 낮음';
						$("#resultSafetyLv").attr('class','safe Lv2');
					} else if (valCnt2 == 1){
						valResult = '안전도 적정';
						$("#resultSafetyLv").attr('class','safe Lv3');
					} else if (valCnt2 == 0){
						valResult = '안전도 적정';
						$("#resultSafetyLv").attr('class','safe Lv3');
					}
					$.jcom.showFormMessage({message : valResult, targetId : "#resultSafetyLv"});
				} else {
					$("#resultSafetyLv").attr('class','safe Lv1');
					$.jcom.showFormMessage({message : '사용불가', targetId : "#resultSafetyLv"});
				}
				*/
			}
		}
	},
	jsns : {
		//이벤트 페이지에서 SNS공유
		goFaceBookEvent : function(args,v_storeSeq) {
			$("#snsSharePop").hide();
			$.ajax({
			    type : "POST",
		        data:{
					storeCd 	:	"EVT",
					storeSeq	:	v_storeSeq
				},
		        url : "/kr/ko/SnsSeedPoint.do",
		        success : function(data){
		        	data = $.trim(data);
		        	if(data=="300" || data=="000"){
		        		window.open("http://www.facebook.com/share.php?u="+encodeURIComponent(args));
		        	}else{
		        		window.open("http://www.facebook.com/share.php?u="+encodeURIComponent(args));
//		        		$.jcom.showCommonLayer("씨드 "+ data + "개가 적립되었습니다.", "씨드적립 알람");
		        	}
		        }
		    });

		},
		//이벤트 페이지에서 SNS공유
		goKakaoStoryEvent : function(args, ttl, v_storeSeq) {
			$("#snsSharePop").hide();
			$.ajax({
		        type : "POST",
		        data:{
					storeCd 	:	"EVT",
					storeSeq	:	v_storeSeq
				},
		        url : "/kr/ko/SnsSeedPoint.do",
		        success : function(data){
		        	data = $.trim(data);
		        	if(data=='300' || data=='000'){
		        		Kakao.Story.share({
							url: args,
							text: ttl
						});
		        	}
		        	else{
		        		Kakao.Story.share({
							url: args,
							text: ttl
						});
//		        		$.jcom.showCommonLayer("씨드 "+ data + "개가 적립되었습니다.", "씨드적립 알람");
		        	}
		        }
		    });
		},
		//이벤트 페이지에서 SNS공유
		goKakaoLinkEvent : function(mag, url,v_storeSeq, imgUrl) {
			$("#snsSharePop").hide();
			$.ajax({
		        type : "POST",
		        data:{
					storeCd 	:	"EVT",
					storeSeq	:	v_storeSeq
				},
		        url : "/kr/ko/SnsSeedPoint.do",
		        success : function(data){
		        	data = $.trim(data);

		        	if(data=="300" || data=="000"){
		        		 Kakao.Link.sendDefault({
	        		      objectType: 'feed',
	        		      content: {
	        		        title: mag,
	        		        imageUrl: imgUrl,
	        		        link: {
	        		          mobileWebUrl: url,
	        		          webUrl: url
	        		        }
	        		      },
	        		      buttons: [
	  				        {
	  				          title: '바로가기',
	  				          link: {
	  				            mobileWebUrl: url,
	  				            webUrl: url
	  				          }
	  				        }
	  				      ]
	        		    });
		        	}else{
		        		Kakao.Link.sendDefault({
	        		      objectType: 'feed',
	        		      content: {
	        		        title: mag,
	        		        imageUrl: imgUrl,
	        		        link: {
	        		          mobileWebUrl: url,
	        		          webUrl: url
	        		        }
	        		      },
	        		      buttons: [
	  				        {
	  				          title: '바로가기',
	  				          link: {
	  				            mobileWebUrl: url,
	  				            webUrl: url
	  				          }
	  				        }
	  				      ]
	        		    });
//		        		$.jcom.showCommonLayer("씨드 "+ data + "개가 적립되었습니다.", "씨드적립 알람");
		        	}
		        }
		    });

		},
		goFaceBook : function(args) {
			$("#snsSharePop").hide();
			window.open("http://www.facebook.com/share.php?u="+encodeURIComponent(args));
		},
		goKakaoStory : function(args, ttl) {
			$("#snsSharePop").hide();
			Kakao.Story.share({
				url: args,
				text: ttl
			});
		},
		goKakaoLink : function(mag, url, img) {
			$("#snsSharePop").hide();
			Kakao.Link.sendDefault({
  		      objectType: 'feed',
  		      content: {
  		        title: mag,
  		        imageUrl: img,
  		        link: {
  		          mobileWebUrl: url,
  		          webUrl: url
  		        }
  		      },
  		      buttons: [
			        {
			          title: '바로가기',
			          link: {
			            mobileWebUrl: url,
			            webUrl: url
			          }
			        }
			      ]
  		    });
		},
		goKakaoLinkImg : function(msg, url, btnTxt, imgUrl, width, height) {
			if(width == "") width = "300";
			if(height == "") height = "200";

			if(imgUrl != "") {
			    Kakao.Link.createTalkLinkButton({
			        label: msg,
			        image: {
			          src: imgUrl,
			          width: width,
			          height: height
			        },
			        webButton: {
			          text: btnTxt,
			          url: url // 앱 설정의 웹 플랫폼에 등록한 도메인의 URL이어야 합니다.
			        }
			    });
			} else {
			    Kakao.Link.sendTalkLink({
					label : msg,
					webLink : {
						text: btnTxt,
						url: url // 앱 설정의 웹 플랫폼에 등록한 도메인의 URL이어야 합니다.
					}
				});
			}
		},
		urlClipCopy : function(){
			$("#snsSharePop").hide();
			var IE = (document.all)?true:false;
			if(IE){
				window.clipboardData.setData("Text",location.href);
				$.jcom.showCommonLayer("URL이 복사되었습니다.", "공유하기");
			}else{
				/*temp = prompt("URL이 복사되었습니다.", location.href);*/
				var t = document.createElement("textarea");
				document.body.appendChild(t);
				t.value = location.href;
				t.select();
				document.execCommand('copy');
				document.body.removeChild(t);
				$.jcom.showCommonLayer("URL이 복사되었습니다.", "공유하기");
			}
		}
	},
	//2018.01 이벤트 페이지 스크립트
	jevt : {
		evtInfo : function(map){
			var fl = false;
			if($('#loginChk').val()!='OK'){

				$.ajax({
					dataType: 'XML',
					type : 'POST',
					async : false,
					data:{
						evtNm	:	map.get('evtNm')
					},
					url : "/kr/ko/EventCommonGetApplyFlDt.do",
					success : function(data){
						$('#loginChk').val('OK');
						$(data).find("event").each(function () {
							//이벤트 기간
							$('#applyFl').val($(data).find("applyFl").text());
							$('#stdt').val($(data).find("stdt").text());
							$('#eddt').val($(data).find("eddt").text());
							$('#snsIdNa').val($(data).find("snsIdNa").text());
							$('#chIdNa').val($(data).find("chIdNa").text());
							$('#storeIdNa').val($(data).find("storeIdNa").text());
						})
					},
					error : function(data){
						return fl;
					}
				});
			}
			if($('#applyFl').val()=='N'){
				alert("이벤트기간이 아닙니다.");
				return fl;
			} else if($('#snsIdNa').val()=='Y' && map.get('isSnsLogin') == 'Y'){
				//SNS 로그인 참여불가
				$.jhead.fncConnectToMember();
				return fl;
			} else if($('#chIdNa').val()=='Y' && map.get('ucstmId') <= 0){
				//비통합회원 참여불가
				alert("이니스프리 통합고객만 참여 가능합니다.");
				return fl;
			} else if($('#storeIdNa').val()=='Y' && map.get('storeLoginYn') == 'P'){
				//매장로그인 참여불가
				alert("이니스프리쇼핑몰 온라인회원만\n 참여가능합니다.");
				return fl;
			} else {
				fl = true; return fl;
			}
			return fl;
		}
	}
});

})(jQuery);

//2017.11 비밀번호 설정규칙 변경
//가. 영문 대문자, 소문자, 숫자, 특수문자 중 최소 2가지 이상의 문자조합으로 구성
//나. 최소 6자리 이상, 최대 16자리 이하로 구성
//다. 사용 불가능한 비밀번호: 공백, 현재 사용 중 비밀번호, ID와 동일한 비밀번호
//* 사용 가능한 특수문자32자: ! " # $ % & ' ( ) * + , - . / : ; < = > ? @ [ ＼] ^ _ ` { | } ~
function pwValCnt(value){
	var valCnt = 0;
	if(/((?=.*[A-Z])).{8,32}/.test(value)) //대문자 사용
    {
		valCnt++;
    }
	if(/((?=.*[a-z])).{8,32}/.test(value)) //소문자 사용
    {
		valCnt++;
    }
	if(/((?=.*[0-9])).{8,32}/.test(value)) //숫자 사용
    {
		valCnt++;
    }
//	if(/((?=.*[~'!@#$%?\\\\/&*\\]|\\[=()}\"{+_:;,.><'-])).{6,16}/.test(value)) //특수문자 사용
//    {
//
//		valCnt++;
//    }
	return valCnt;
}